This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2025-01-17T18:43:33.885Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
app.js
index.html
README.md
style.css

================================================================
Repository Files
================================================================

================
File: app.js
================
// Particle system background
let particles = [];
const SPLASH_PARTICLE_COUNT = 200;  // Number of particles in splash section
const OTHER_PARTICLE_COUNT = 50;    // Reduced number for other sections
let currentSection = 'splash';
const INTERACTION_RADIUS = 200;  // How close the cursor needs to be to affect particles

class Particle {
    constructor(opacity = 1) {
        this.position = createVector(random(width), random(height));
        this.velocity = createVector(random(-1, 1), random(-1, 1));
        this.size = random(2, 5);
        this.baseColor = color(71, 75, 255);
        this.highlightColor = color(218, 177, 218); // Purple highlight color
        this.currentColor = this.baseColor;
        this.opacity = opacity;
        this.targetOpacity = opacity;
    }

    update() {
        // Update position
        this.position.add(this.velocity);
        
        // Bounce off edges
        if (this.position.x < 0 || this.position.x > width) this.velocity.x *= -1;
        if (this.position.y < 0 || this.position.y > height) this.velocity.y *= -1;
        
        // Smoothly transition opacity
        this.opacity = lerp(this.opacity, this.targetOpacity, 0.1);

        // Check distance from mouse if in splash section
        if (currentSection === 'splash') {
            const distance = dist(this.position.x, this.position.y, mouseX, mouseY);
            
            if (distance < INTERACTION_RADIUS) {
                // Calculate how much the color should change based on distance
                const lerpAmount = map(distance, 0, INTERACTION_RADIUS, 1, 0);
                
                // Interpolate between base and highlight colors
                const r = lerp(red(this.baseColor), red(this.highlightColor), lerpAmount);
                const g = lerp(green(this.baseColor), green(this.highlightColor), lerpAmount);
                const b = lerp(blue(this.baseColor), blue(this.highlightColor), lerpAmount);
                
                this.currentColor = color(r, g, b);
            } else {
                this.currentColor = this.baseColor;
            }
        } else {
            this.currentColor = this.baseColor;
        }
    }

    display() {
        noStroke();
        const particleColor = color(
            red(this.currentColor), 
            green(this.currentColor), 
            blue(this.currentColor), 
            this.opacity * 150
        );
        fill(particleColor);
        ellipse(this.position.x, this.position.y, this.size);
    }

    setOpacity(newOpacity) {
        this.targetOpacity = newOpacity;
    }
}

function setup() {
    let canvas = createCanvas(windowWidth, windowHeight);
    canvas.parent('animated-bg');
    
    // Initialize with maximum particles
    for (let i = 0; i < SPLASH_PARTICLE_COUNT; i++) {
        particles.push(new Particle(i < OTHER_PARTICLE_COUNT ? 1 : 1));
    }

    // Initialize scroll position check
    updateParticleVisibility();
}

function draw() {
    clear();
    particles.forEach(particle => {
        particle.update();
        particle.display();
    });
}

function updateParticleVisibility() {
    const splash = document.getElementById('splash');
    const splashRect = splash.getBoundingClientRect();
    const scrollPosition = window.pageYOffset || document.documentElement.scrollTop;
    
    // Determine if we're in the splash section
    const inSplash = scrollPosition < splashRect.height;
    currentSection = inSplash ? 'splash' : 'other';
    
    // Update particle opacity based on section
    particles.forEach((particle, index) => {
        if (index < OTHER_PARTICLE_COUNT) {
            // These particles are always visible
            particle.setOpacity(1);
        } else {
            // These particles fade out below the splash section
            particle.setOpacity(inSplash ? 1 : 0);
        }
    });
}

function windowResized() {
    resizeCanvas(windowWidth, windowHeight);
}

// Add scroll event listener for particle updates
window.addEventListener('scroll', () => {
    updateParticleVisibility();
});

// Add the existing scroll to top functionality
const scrollToTopButton = document.querySelector('.scroll-to-top');

window.addEventListener('scroll', () => {
    if (window.pageYOffset > 100) {
        scrollToTopButton.style.display = "block";
    } else {
        scrollToTopButton.style.display = "none";
    }
});

scrollToTopButton.addEventListener('click', () => {
    window.scrollTo({
        top: 0,
        behavior: 'smooth'
    });
});

document.addEventListener('DOMContentLoaded', () => {
    // Smooth scrolling for nav links
    document.querySelectorAll('.nav-link').forEach(link => {
        link.addEventListener('click', (e) => {
            e.preventDefault();
            const targetId = link.getAttribute('href');
            const targetSection = document.querySelector(targetId === '#home' ? '#splash' : targetId);
            const headerHeight = document.querySelector('header').offsetHeight;
            
            window.scrollTo({
                top: targetId === '#home' ? 0 : targetSection.offsetTop - headerHeight,
                behavior: 'smooth'
            });
        });
    });

    // Update active nav link on scroll
    function updateActiveNavLink() {
        const sections = document.querySelectorAll('section');
        const navLinks = document.querySelectorAll('.nav-link');
        const headerHeight = document.querySelector('header').offsetHeight;
        const splash = document.querySelector('#splash');
        
        const scrollPosition = window.scrollY + headerHeight + 100;

        // Check if we're in the splash/home section
        if (scrollPosition < splash.offsetHeight) {
            navLinks.forEach(link => {
                link.classList.remove('active');
                if (link.getAttribute('href') === '#home') {
                    link.classList.add('active');
                }
            });
            return;
        }

        // Check other sections
        sections.forEach(section => {
            if (section.id === 'splash') return; // Skip splash section as it's handled above
            
            const sectionTop = section.offsetTop;
            const sectionHeight = section.offsetHeight;
            
            if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
                navLinks.forEach(link => {
                    link.classList.remove('active');
                    if (link.getAttribute('href') === `#${section.id}`) {
                        link.classList.add('active');
                    }
                });
            }
        });
    }

    // Add scroll event listener
    window.addEventListener('scroll', updateActiveNavLink);
    updateActiveNavLink(); // Initial call
});

document.addEventListener('DOMContentLoaded', () => {
    const modal = document.getElementById('modal');
    const modalTitle = document.getElementById('modal-title');
    const modalDescription = document.getElementById('modal-description');
    const closeButton = document.querySelector('.close-button');

    // Open modal when clicking Learn More
    document.querySelectorAll('.learn-more').forEach(button => {
        button.addEventListener('click', () => {
            modalTitle.textContent = button.dataset.title;
            modalDescription.textContent = button.dataset.description;
            modal.classList.add('show');
            document.body.style.overflow = 'hidden'; // Prevent scrolling
        });
    });

    // Close modal when clicking the close button
    closeButton.addEventListener('click', () => {
        modal.classList.remove('show');
        document.body.style.overflow = ''; // Restore scrolling
    });

    // Close modal when clicking outside
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.classList.remove('show');
            document.body.style.overflow = ''; // Restore scrolling
        }
    });

    // Close modal with Escape key
    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && modal.classList.contains('show')) {
            modal.classList.remove('show');
            document.body.style.overflow = ''; // Restore scrolling
        }
    });

    document.getElementById('scroll-to-about').addEventListener('click', function() {
        document.getElementById('about').scrollIntoView({ 
            behavior: 'smooth' 
        });
    });

    // Update scroll handler for "View my work" button
    const scrollButton = document.getElementById('scroll-to-about');
    if (scrollButton) {
        scrollButton.addEventListener('click', () => {
            const aboutSection = document.getElementById('about');
            const headerHeight = document.querySelector('header').offsetHeight;
            
            window.scrollTo({
                top: aboutSection.offsetTop - headerHeight,
                behavior: 'smooth'
            });
        });
    }
});

================
File: index.html
================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bryan Zane Smith - Full Stack Developer</title>
    <link rel="stylesheet" href="style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.1/css/all.min.css">
</head>
<body>
    <div id="splash">
        <div id="animated-bg"></div>
        <div class="splash-content">
            <h1>Hello, I'm <span class="highlight">Bryan Zane</span>.</h1>
            <p>I'm a full stack developer!</p>
            <button id="scroll-to-about">View my work ↓</button>
        </div>
    </div>

    <header>
        <nav>
            <ul>
                <li><a href="#home" class="nav-link active">Home</a></li>
                <li><a href="#about" class="nav-link">About</a></li>
                <li><a href="#projects" class="nav-link">Projects</a></li>
                <li><a href="#contact" class="nav-link">Contact</a></li>
            </ul>
        </nav>
    </header>

    <main>
        <section id="about">
            <div class="about-header">
                <div class="profile-icon">
                    <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
                        <circle cx="50" cy="35" r="25" fill="none" stroke="url(#gradient)" stroke-width="2"/>
                        <path d="M15 90 Q50 70 85 90" fill="none" stroke="url(#gradient)" stroke-width="2"/>
                        <defs>
                            <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="100%">
                                <stop offset="0%" style="stop-color:#8B5CF6"/>
                                <stop offset="100%" style="stop-color:#EC4899"/>
                            </linearGradient>
                        </defs>
                    </svg>
                </div>
                <h2>About<span class="highlight-underline"></span></h2>
            </div>

            <p class="about-text">
                I graduated with my Bachelors in Computer Science from the University of Florida in December of 2024, fueled by a strong passion for programming and AI. My skill set includes front-end technologies like React and JavaScript, as well as back-end expertise in C++, Python, and SQL. I am an exceptionally fast learner, and thrive on developing creative solutions to challenging problems, such as a College Football Database with over 1 million tuples, or an academic research hub for scientists and researchers. Outside of coding, I enjoy surfing, gaming, fitness, playing piano, and continuously striving for personal growth.
            <div class="skills-icons">
                <div class="skills-group">
                    <h3>Front-End</h3>
                    <div class="skills-grid">
                        <div class="skill-icon">
                            <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/react/react-original.svg" alt="React"/>
                            <span>React</span>
                        </div>
                        <div class="skill-icon">
                            <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/javascript/javascript-original.svg" alt="JavaScript"/>
                            <span>JavaScript</span>
                        </div>
                        <div class="skill-icon">
                            <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/typescript/typescript-original.svg" alt="TypeScript"/>
                            <span>TypeScript</span>
                        </div>
                        <div class="skill-icon">
                            <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/css3/css3-original.svg" alt="CSS"/>
                            <span>CSS</span>
                        </div>
                    </div>
                </div>

                <div class="skills-group">
                    <h3>Back-End</h3>
                    <div class="skills-grid">
                        <div class="skill-icon">
                            <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/nodejs/nodejs-original.svg" alt="Node.js"/>
                            <span>Node.js</span>
                        </div>
                        <div class="skill-icon">
                            <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/cplusplus/cplusplus-original.svg" alt="C++"/>
                            <span>C++</span>
                        </div>
                        <div class="skill-icon">
                            <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/python/python-original.svg" alt="Python"/>
                            <span>Python</span>
                        </div>
                        <div class="skill-icon">
                            <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/postgresql/postgresql-original.svg" alt="SQL"/>
                            <span>SQL</span>
                        </div>
                    </div>
                </div>

                <div class="skills-group">
                    <h3>Tools</h3>
                    <div class="skills-grid">
                        <div class="skill-icon">
                            <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/git/git-original.svg" alt="Git"/>
                            <span>Git</span>
                        </div>
                        <div class="skill-icon">
                            <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/linux/linux-original.svg" alt="Linux"/>
                            <span>Linux</span>
                        </div>
                        <div class="skill-icon">
                            <img src="https://cdn.jsdelivr.net/gh/devicons/devicon/icons/jira/jira-original.svg" alt="Jira"/>
                            <span>Jira</span>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <section id="projects">
            <h2>Projects<span class="highlight-underline"></span></h2>
            
            <div class="projects-container">
                <!-- Project 1 -->
                <div class="project-card">
                    <div class="project-content">
                        <div class="project-info">
                            <h3>College Football Database</h3>
                            <p>A React and .NET
                                platform with Oracle for analyzing college football data.</p>
                            <div class="project-links">
                                <a href="https://github.com/BryanZaneee/CollegeFootballStats" target="_blank" class="project-button">Live App</a>
                                <button class="project-button learn-more" 
                                    data-title="College Football Database" 
                                    data-description="Engineered a comprehensive college football analytics platform using React, .NET, and Oracle SQL. This full-stack application features dynamic data visualization dashboards, statistical analysis tools, and real-time performance tracking. Used, RESTful APIs, and Material-UI components to deliver intuitive user experiences.">
                                    Learn More
                                </button>
                            </div>
                        </div>
                        <div class="project-image">
                            <a href="https://github.com/BryanZaneee/CollegeFootballStats" target="_blank">
                                <img src="img/img1.png" alt="College Football Database" />
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Project 2 -->
                <div class="project-card reverse">
                    <div class="project-content">
                        <div class="project-info">
                            <h3>Pallas Academic Hub</h3>
                            <p>A React and Go platform with PostgreSQL for academic collaboration and discussion.</p>
                            <div class="project-links">
                                <a href="https://github.com/BryanZaneee/Pallas-Academic-Hub" target="_blank" class="project-button">Live App</a>
                                <button class="project-button learn-more" 
                                    data-title="Pallas: Scientific Collaboration" 
                                    data-description="Developed a full-stack academic collaboration platform using React, Go, and PostgreSQL. This comprehensive solution facilitates real-time research discussions, expert Q&A sessions, and group collaborations. Implemented features including thread management, user authentication, and interactive sessions using modern technologies like Mantine UI and RESTful APIs.">
                                    Learn More
                                </button>
                            </div>
                        </div>
                        <div class="project-image">
                            <a href="https://github.com/BryanZaneee/Pallas-Academic-Hub" target="_blank">
                                <img src="img/img2.png" alt="Pallas Project" />
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Project 3 -->
                <div class="project-card">
                    <div class="project-content">
                        <div class="project-info">
                            <h3>Traffic Crash Heat Map</h3>
                            <p>A C++ program that generates a Heatmap visualization of car crashes in Gainesville.</p>
                            <div class="project-links">
                                <a href="https://github.com/BryanZaneee/HeatMaps" target="_blank" class="project-button">Live App</a>
                                <button class="project-button learn-more" 
                                    data-title="Traffic Crash Heat Map" 
                                    data-description="Engineered a traffic visualization system using C++ and SFML library, implementing dual data structures (Red-Black Tree and HashMap) for crash data analysis. Developed custom collision detection algorithms and interactive visualization features to generate dynamic heatmaps of traffic incidents across Gainesville's urban area.">
                                    Learn More
                                </button>
                            </div>
                        </div>
                        <div class="project-image">
                            <a href="https://github.com/BryanZaneee/HeatMaps" target="_blank">
                                <img src="img/img3.png" alt="Traffic Crash Heat Map" />
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Project 4
                <div class="project-card reverse">
                    <div class="project-content">
                        <div class="project-info">
                            <h3>Debt-Managment App</h3>
                            <p>Student Savers; A React based web application with Node.js and SQL tailored for managing student debt.</p>
                            <div class="project-links">
                                <a href="https://github.com/BryanZaneee/Student-Savers.git" target="_blank" class="project-button">Live App</a>
                                <button class="project-button learn-more" 
                                    data-title="Student Savers" 
                                    data-description="A comprehensive debt management platform built with React, Node.js, and SQL, designed specifically for students. Features include debt tracking, payment planning, and financial analytics.">
                                    Learn More
                                </button>
                            </div>
                        </div>
                        <div class="project-image">
                            <a href="https://github.com/BryanZaneee/Student-Savers.git" target="_blank">
                                <img src="/api/placeholder/600/400" alt="Student Savers Project" />
                            </a>
                        </div>
                    </div>
                </div>
            </div>  -->

        </section>

        <section id="contact">
            <h2>Contact<span class="highlight-underline"></span></h2>
            <p>Have a question or want to work together? Leave your details and I'll get back to you as soon as possible!</p>
            <form id="contact-form">
                <input type="text" placeholder="Name" required>
                <input type="email" placeholder="Email" required>
                <textarea placeholder="Message" required></textarea>
                <button type="submit">SUBMIT</button>
            </form>
        </section>
    </main>

    <footer>
        <a href="https://github.com/BryanZaneee" target="_blank"><i class="fab fa-github"></i></a>
        <a href="mailto:bzane09@gmail.com"><i class="far fa-envelope"></i></a>
        <a href="https://www.linkedin.com/in/bryan-zane-smith/" target="_blank"><i class="fab fa-linkedin"></i></a>
        <a href="#" target="_blank"><i class="fab fa-instagram"></i></a>
        <p>Bryan Zane Smith ©2024</p>
    </footer>

    <div class="scroll-to-top">↑</div>

    <!-- Modal -->
    <div id="modal" class="modal">
        <div class="modal-content">
            <span class="close-button">&times;</span>
            <h3 id="modal-title"></h3>
            <p id="modal-description"></p>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.4.0/p5.min.js"></script>
    <script src="app.js"></script>
</body>
</html>

================
File: README.md
================
# Bryan Zane Smith - Personal Portfolio Website

## Overview
This repository contains the source code for my personal portfolio website. The website showcases my journey as a Computer Science student at the University of Florida, highlighting my skills in full-stack development, project work, and providing a means for potential employers or collaborators to connect.

## Project Structure
The project consists of three main files:

1. `index.html`: Main HTML file structuring the website content
2. `style.css`: CSS file implementing a modern, dark-themed design with responsive layouts
3. `app.js`: JavaScript file handling animations and interactive features

## Key Features
- Responsive design optimized for all devices
- Interactive particle animation background with cursor interaction
- Dynamic navigation with smooth scrolling and section highlighting
- Comprehensive skills showcase with categorized technology icons
- Project portfolio with:
  - GitHub repository links
  - Interactive "Learn More" modals
  - Visual project previews
  - Responsive image handling
- Professional contact form
- Social media integration
- Accessibility-focused design

## Sections Breakdown

### Splash Screen
- Animated particle background with cursor-reactive elements
- Professional introduction
- Call-to-action button

### About Section
- Professional overview
- Skills categorization:
  - Front-End: React, JavaScript, TypeScript, CSS
  - Back-End: Node.js, C++, Python, SQL
  - Tools: Git, Linux, Jira

### Projects Section
Features four main projects:
1. Student Savers - Debt Management Application
2. Traffic Crash Heat Map - Data Visualization
3. College Football Database - Sports Analytics
4. Pallas - Scientific Collaboration Platform

Each project includes:
- Project description
- GitHub repository link
- Detailed information modal
- Visual preview

### Contact Section
- Professional contact form
- Social media links
- Email integration

## Technical Features

### CSS Implementation
- Modern dark theme with accent colors (#474BFF)
- Responsive grid layouts
- Smooth transitions and animations
- Interactive hover states
- Modal implementations
- Flexible image handling

### JavaScript Functionality
- Particle system animation with:
  - Dynamic density adjustment
  - Cursor interaction
  - Section-based visibility
- Smooth scrolling navigation
- Active section highlighting
- Modal system for project details
- Scroll-to-top functionality

### Local Development
1. Clone the repository
2. Open `index.html` in a web browser
3. No build process required - pure HTML, CSS, and JavaScript

### Live Website
Visit: [https://bryanzaneee.github.io/](https://bryanzaneee.github.io/)

## Contact
- Email: [bzane09@gmail.com](mailto:bzane09@gmail.com)
- GitHub: [BryanZaneee](https://github.com/BryanZaneee)
- LinkedIn: [Bryan Zane Smith](https://www.linkedin.com/in/bryan-zane-smith/)

## Future Enhancements
- Enhanced animation effects
- Performance optimizations
- Expanded interactive features

================
File: style.css
================
/* Global Styles */
body, html {
    background-color: #111;
    color: #fff;
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
}

/* Element Styles */
button {
    background-color: transparent;
    border: 2px solid #474BFF;
    color: #474BFF;
    cursor: pointer;
    font-size: 1rem;
    padding: 10px 20px;
    transition: all 0.3s ease;
}

button:hover {
    background-color: #474BFF;
    color: #111;
}

footer {
    background-color: #1f1f1f;
    padding: 2rem;
    text-align: center;
}

footer a {
    color: #fff;
    font-size: 1.5rem;
    margin: 0 10px;
    text-decoration: none;
}

footer p {
    color: #888;
    font-size: 0.9rem;
    margin-top: 1rem;
}

header {
    background-color: rgba(34, 34, 34, 0.9);
    position: sticky;
    top: 0;
    width: 100%;
    z-index: 1000;
}

nav ul {
    display: flex;
    justify-content: flex-end;
    list-style-type: none;
    margin: 0;
    padding: 0;
}

nav ul li {
    padding: 1rem;
}

nav ul li a {
    color: white;
    text-decoration: none;
    transition: color 0.3s ease;
}

nav ul li a:hover, nav ul li a.active {
    color: #474BFF;
}

main {
    padding-top: 0;
}

section {
    align-items: center;
    display: flex;
    flex-direction: column;
    justify-content: center;
    min-height: 100vh;
    padding: 4rem 2rem;
}

/* ID Styles */
#animated-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 0;
}

#splash {
    align-items: center;
    display: flex;
    flex-direction: column;
    height: 100vh;
    justify-content: center;
    overflow: hidden;
    position: relative;
    text-align: center;
}

#splash h1 {
    font-size: 3rem;
    margin-bottom: 0.5rem;
}

#splash p {
    font-size: 1.5rem;
    margin-bottom: 2rem;
}

#about {
    background-color: #111;
}

#about h2 {
    font-size: 2.5rem;
    margin-bottom: 2rem;
    position: relative;
}

#about h2::after {
    background-color: #474BFF;
    bottom: -10px;
    content: '';
    height: 4px;
    left: 50%;
    position: absolute;
    transform: translateX(-50%);
    width: 50px;
}

.about-content {
    display: flex;
    justify-content: space-between;
    max-width: 1200px;
    width: 100%;
}

.about-text {
    flex: 1;
    padding-right: 2rem;
}

.skills-icons {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 1rem;
}

/* Contact section styles */
#contact {
    text-align: center;
    background-color: #111;
    padding: 4rem 2rem;
}

#contact h2 {
    font-size: 3rem;
    margin-bottom: 1rem;
}

#contact p {
    max-width: 600px;
    margin: 0 auto 2rem;
}

#contact-form {
    display: flex;
    flex-direction: column;
    max-width: 500px;
    margin: 0 auto;
}

#contact-form input,
#contact-form textarea {
    background-color: #1f1f1f;
    border: none;
    padding: 15px;
    margin-bottom: 1rem;
    color: #fff;
    font-size: 1rem;
}

#contact-form textarea {
    height: 150px;
    resize: vertical;
}

#contact-form button {
    background-color: transparent;
    border: 2px solid #474BFF;
    color: #474BFF;
    padding: 10px 20px;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    align-self: flex-end;
}

#contact-form button:hover {
    background-color: #474BFF;
    color: #111;
}

/* Footer styles */
footer {
    background-color: #1f1f1f;
    padding: 2rem;
    text-align: center;
}

footer a {
    color: #fff;
    font-size: 1.5rem;
    margin: 0 15px;
    text-decoration: none;
    transition: color 0.3s ease;
}

footer a:hover {
    color: #474BFF;
}

footer p {
    margin-top: 1rem;
    font-size: 0.9rem;
    color: #888;
}

/* Class Styles */
.highlight {
    color: #474BFF;
}

.scroll-to-top {
    background-color: #474BFF;
    border-radius: 5px;
    bottom: 20px;
    color: #fff;
    cursor: pointer;
    font-size: 20px;
    height: 40px;
    line-height: 40px;
    position: fixed;
    right: 20px;
    text-align: center;
    transition: opacity 0.3s ease;
    width: 40px;
}

.scroll-to-top:hover {
    opacity: 0.8;
}

.splash-content {
    position: relative;
    z-index: 1;
}
/* About section styling */
#about {
    padding: 6rem 2rem;
    background-color: #111;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.about-header {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 1.5rem;
    margin-bottom: 2rem; /* Reduced from 3rem */
    width: 100%;
}

.profile-icon {
    width: 80px;
    height: 80px;
}

#about h2 {
    font-size: 2.5rem;
    position: relative;
    color: #fff;
    margin: 0;
    text-align: center;
}

.highlight-underline {
    position: absolute;
    bottom: -10px;
    left: 0;
    width: 100%;
    height: 4px;
    background-color: #EC4899;
}

.about-text {
    color: #fff;
    font-size: 1.1rem;
    line-height: 1.6;
    max-width: 800px;
    margin: 0 auto 1.5rem; /* Reduced from 2rem to 1.5rem */
    text-align: center;
}

.skills-icons {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 2rem;
    width: 100%;
    max-width: 1200px;
}

.skills-group {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.skills-group h3 {
    color: #fff;
    font-size: 1.8rem;
    margin-bottom: 2rem;
    text-align: center;
    width: 100%;
}

.skills-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
    width: 100%;
}

.skill-icon {
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid #333;
    border-radius: 8px;
    padding: 0.75rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
    transition: all 0.3s ease;
}

.skill-icon:hover {
    transform: translateY(-5px);
    border-color: #474BFF;
    background: rgba(255, 255, 255, 0.1);
}

.skill-icon img {
    width: 32px;
    height: 32px;
}

.skill-icon span {
    color: #fff;
    font-size: 0.8rem;
    text-align: center;
}

@media (max-width: 768px) {
    .about-header {
        flex-direction: column;
        text-align: center;
        gap: 1rem;
    }

    .profile-icon {
        order: 1; /* On mobile, icon goes above */
        width: 60px;
        height: 60px;
    }

    #about h2 {
        order: 2; /* On mobile, heading goes below */
    }

    .skills-icons {
        grid-template-columns: 1fr;
    }
    
    .skills-grid {
        grid-template-columns: repeat(2, 1fr);
    }
}

@media (max-width: 480px) {
    .skills-grid {
        grid-template-columns: 1fr;
    }
    
    .skills-group h3 {
        font-size: 1.5rem;
    }
}

/* Project section styling */
#projects {
    padding: 6rem 2rem;
    background-color: #111;
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
}

#projects h2 {
    font-size: 2.5rem;
    position: relative;
    color: #fff;
    margin-bottom: 4rem;
    text-align: center;
}

.highlight-underline {
    position: absolute;
    bottom: -10px;
    left: 0;
    width: 100%;
    height: 4px;
    background: linear-gradient(to right, #EC4899, #474BFF);
}

.projects-container {
    width: 100%;
    max-width: 1200px;
    display: flex;
    flex-direction: column;
    gap: 8rem;
}

.project-card {
    width: 100%;
    position: relative;
}

.project-content {
    display: flex;
    align-items: center;
    gap: 4rem;
}

.project-card.reverse .project-content {
    flex-direction: row-reverse;
}

.project-info {
    flex: 1;
}

.project-info h3 {
    font-size: 2rem;
    color: #fff;
    margin-bottom: 1rem;
}

.project-info p {
    color: #ccc;
    font-size: 1.1rem;
    line-height: 1.6;
    margin-bottom: 2rem;
}

.project-image {
    flex: 1;
    position: relative;
    width: 100%;
    max-width: 600px;
    cursor: pointer;
    transition: transform 0.3s ease;
}

.project-image:hover {
    transform: scale(1.02);
}

.project-image img {
    position: relative;
    width: 100%;
    height: auto; /* This allows the image to scale proportionally */
    aspect-ratio: 16 / 10; /* Maintains a consistent aspect ratio */
    object-fit: cover; /* Ensures the image covers the area without distortion */
    border-radius: 8px;
    z-index: 1;
    transition: filter 0.3s ease;
}

.project-image:hover img {
    filter: brightness(1.1);
}

.project-image::before {
    content: '';
    position: absolute;
    top: -20px;
    left: -20px;
    right: 20px;
    bottom: 20px;
    background-color: #474BFF;
    z-index: 0;
    border-radius: 8px;
}

.project-card.reverse .project-image::before {
    left: 20px;
    right: -20px;
}

.project-links {
    display: flex;
    gap: 1rem;
}

/* Update existing project button styles */
.project-button {
    padding: 0.75rem 1.5rem;
    border: 2px solid #474BFF;
    border-radius: 4px;
    color: #fff;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.3s ease;
    background: transparent;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    font-size: 1rem;
}

.project-button:hover {
    background-color: #474BFF;
}

@media (max-width: 768px) {
    .project-content {
        flex-direction: column-reverse;
        gap: 2rem;
    }

    .project-card.reverse .project-content {
        flex-direction: column-reverse;
    }

    .project-image::before {
        top: -10px;
        left: -10px;
        right: 10px;
        bottom: 10px;
    }

    .project-card.reverse .project-image::before {
        left: -10px;
        right: 10px;
    }
}

.project-image {
    flex: 1;
    position: relative;
    width: 100%;
    max-width: 600px; /* Maximum width for larger screens */
}

.project-image::before {
    content: '';
    position: absolute;
    top: -20px;
    left: -20px;
    right: 20px;
    bottom: 20px;
    background-color: #474BFF;
    z-index: 0;
    border-radius: 8px;
}

.project-card.reverse .project-image::before {
    left: 20px;
    right: -20px;
}

.project-image img {
    position: relative;
    width: 100%;
    height: auto; /* This allows the image to scale proportionally */
    aspect-ratio: 16 / 10; /* Maintains a consistent aspect ratio */
    object-fit: cover; /* Ensures the image covers the area without distortion */
    border-radius: 8px;
    z-index: 1;
    transition: filter 0.3s ease;
}

.project-image:hover img {
    filter: brightness(1.1);
}

@media (max-width: 1200px) {
    .project-image {
        max-width: 500px;
    }
}

@media (max-width: 992px) {
    .project-image {
        max-width: 400px;
    }
}

@media (max-width: 768px) {
    .project-image {
        max-width: 100%;
    }
    
    .project-content {
        flex-direction: column-reverse;
        gap: 2rem;
    }
}

.modal {
    display: none;
    position: fixed;
    z-index: 1001;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.7);
    opacity: 0;
    transition: opacity 0.3s ease;
}

.modal.show {
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 1;
}

.modal-content {
    background-color: #1f1f1f;
    padding: 2rem;
    border-radius: 8px;
    max-width: 500px;
    width: 90%;
    position: relative;
    transform: translateY(-20px);
    transition: transform 0.3s ease;
}

.modal.show .modal-content {
    transform: translateY(0);
}

.modal-content h3 {
    color: #fff;
    margin-bottom: 1rem;
}

.modal-content p {
    color: #ccc;
    line-height: 1.6;
}

.close-button {
    position: absolute;
    right: 1rem;
    top: 1rem;
    font-size: 1.5rem;
    color: #fff;
    cursor: pointer;
    transition: color 0.3s ease;
}

.close-button:hover {
    color: #474BFF;
}

.project-button i {
    margin-right: 0.5rem;
}

#contact h2 {
    font-size: 2.5rem;
    position: relative;
    color: #fff;
    margin-bottom: 4rem;
    text-align: center;
}

.highlight-underline {
    position: absolute;
    bottom: -10px;
    left: 0;
    width: 100%;
    height: 4px;
    background: linear-gradient(to right, #EC4899, #474BFF);
}
